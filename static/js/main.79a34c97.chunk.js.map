{"version":3,"sources":["components/spinner.gif","components/Loader.js","components/navbar/Navbar.js","components/events-bar/EventInfo.js","components/events-bar/EventsBar.js","components/map/LeafletMap.js","App.js","index.js"],"names":["styles","width","height","display","justifyContent","alignItems","Loader","style","src","spinner","alt","Navbar","isWildfire","selectIsWildfire","selectIsStorm","className","href","onClick","EventInfo","eventInfo","id","title","EventsBar","LeafletMap","eventData","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","ev","i","categories","Marker","position","geometries","coordinates","Popup","App","useState","setEventData","loading","setLoading","setIsWildfire","useEffect","a","fetch","res","json","events","fetchEvents","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,MAA0B,oC,OCGnCA,EAAS,CACXC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAWDC,EARA,WACX,OACI,qBAAKC,MAAOP,EAAZ,SACI,qBAAKQ,IAAKC,EAASC,IAAI,eCSpBC,G,WAlBA,SAAC,GAAoD,EAAlDC,WAAmD,IAAvCC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAC5C,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGA,UAAU,YAAYC,KAAK,IAA9B,gCAIJ,qBAAKC,QAASJ,EAAkBE,UAAU,wBAA1C,SACI,mBAAGA,UAAU,WAAb,yBAEJ,qBAAKA,UAAU,iBAAiBE,QAASH,EAAzC,SACI,mBAAGC,UAAU,WAAb,2BCGDG,EAhBG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjB,OAAIA,EAEI,gCACI,mDACA,+BACI,sCAASA,EAAUC,MACnB,yCAAYD,EAAUE,eAK3B,MCFAC,G,MARG,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,UACjB,OACI,qBAAKJ,UAAU,aAAf,SACKI,GAAa,cAAC,EAAD,CAAWA,UAAWA,Q,8CC4BjCI,MAhCf,YAAoC,IAAdC,EAAa,EAAbA,UAClB,OACI,eAACC,EAAA,EAAD,CACIV,UAAU,MACVW,OAAQ,CAAC,QAAS,KAClBC,KAAM,EACNC,iBAAiB,EAJrB,UAMI,cAACC,EAAA,EAAD,CACIC,YAAY,yEACZC,IAAI,qGAGPP,EAAUQ,KAAI,SAACC,EAAIC,GAAL,OACa,IAAxBD,EAAGE,WAAW,GAAGf,GACb,cAACgB,EAAA,EAAD,CAEIC,SAAU,CACNJ,EAAGK,WAAW,GAAGC,YAAY,GAC7BN,EAAGK,WAAW,GAAGC,YAAY,IAJrC,SAOI,cAACC,EAAA,EAAD,UACI,4BAAIP,EAAGZ,WAPNa,GAUT,YC4BLO,MAlDf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACJlB,EADI,KACOmB,EADP,OAEmBD,oBAAS,GAF5B,mBAEJE,EAFI,KAEKC,EAFL,OAGyBH,oBAAS,GAHlC,mBAGJ9B,EAHI,KAGQkC,EAHR,KA4BX,OAvBAC,qBAAU,YACW,uCAAG,gCAAAC,EAAA,6DAChBH,GAAW,GADK,SAEEI,MACd,mDAHY,cAEVC,EAFU,gBAKSA,EAAIC,OALb,gBAKRC,EALQ,EAKRA,OAERT,EAAaS,GACbP,GAAW,GARK,4CAAH,qDAWjBQ,KACD,IAWC,sBACI9C,MAAOqC,EAAU,CAAEU,WAAY,QAAW,CAAEA,WAAY,WACxDvC,UAAU,MAFd,UAII,cAAC,EAAD,CACIH,WAAYA,EACZC,iBAfZ,WACIiC,GAAc,IAeNhC,cAZZ,WACIgC,GAAc,MAcRF,EAKE,cAAC,EAAD,IAJA,qCACI,cAAC,EAAD,CAAYpB,UAAWA,IAD3B,IACyC,cAAC,EAAD,WC7CzD+B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.79a34c97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.e1e435ec.gif\";","import React from \"react\";\nimport spinner from \"./spinner.gif\";\n\nconst styles = {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n};\n\nconst Loader = () => {\n    return (\n        <div style={styles}>\n            <img src={spinner} alt=\"Loading\" />\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nimport \"../../styles/styles.css\";\nimport \"./navbar.css\";\n\nconst Navbar = ({ isWildfire, selectIsWildfire, selectIsStorm }) => {\n    return (\n        <nav className=\"nav\">\n            <div className=\"item-container\">\n                <a className=\"nav-brand\" href=\"/\">\n                    Wildfire Tracker\n                </a>\n            </div>\n            <div onClick={selectIsWildfire} className=\"item-container active\">\n                <p className=\"nav-item\">Wildfires</p>\n            </div>\n            <div className=\"item-container\" onClick={selectIsStorm}>\n                <p className=\"nav-item\">Storms</p>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"../../styles/styles.css\";\n\nconst EventInfo = ({ eventInfo }) => {\n    if (eventInfo) {\n        return (\n            <div>\n                <h1>Event Information</h1>\n                <ul>\n                    <li>Id: {eventInfo.id}</li>\n                    <li>Title: {eventInfo.title}</li>\n                </ul>\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default EventInfo;\n","import React from \"react\";\nimport EventInfo from \"./EventInfo\";\n\nimport \"../../styles/styles.css\";\nimport \"./events-bar.css\";\n\nconst EventsBar = ({ eventInfo }) => {\n    return (\n        <div className=\"events-bar\">\n            {eventInfo && <EventInfo eventInfo={eventInfo} />}\n        </div>\n    );\n};\n\nexport default EventsBar;\n","import React from \"react\";\nimport \"../../styles/styles.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./map.css\";\n\nfunction LeafletMap({ eventData }) {\n    return (\n        <MapContainer\n            className=\"map\"\n            center={[51.505, -0.09]}\n            zoom={3}\n            scrollWheelZoom={true}\n        >\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n            />\n\n            {eventData.map((ev, i) =>\n                ev.categories[0].id === 8 ? (\n                    <Marker\n                        key={i}\n                        position={[\n                            ev.geometries[0].coordinates[1],\n                            ev.geometries[0].coordinates[0],\n                        ]}\n                    >\n                        <Popup>\n                            <p>{ev.title}</p>\n                        </Popup>\n                    </Marker>\n                ) : null\n            )}\n        </MapContainer>\n    );\n}\n\nexport default LeafletMap;\n","import { useState, useEffect } from \"react\";\nimport Loader from \"./components/Loader\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport EventsBar from \"./components/events-bar/EventsBar\";\n\nimport \"./styles/App.css\";\nimport \"./styles/styles.css\";\nimport LeafletMap from \"./components/map/LeafletMap\";\n\nfunction App() {\n    const [eventData, setEventData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [isWildfire, setIsWildfire] = useState(true);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            setLoading(true);\n            const res = await fetch(\n                \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n            );\n            const { events } = await res.json();\n\n            setEventData(events);\n            setLoading(false);\n        };\n\n        fetchEvents();\n    }, []);\n\n    function selectIsWildfire() {\n        setIsWildfire(true);\n    }\n\n    function selectIsStorm() {\n        setIsWildfire(false);\n    }\n\n    return (\n        <div\n            style={loading ? { background: \"#fff\" } : { background: \"#f3f2ef\" }}\n            className=\"App\"\n        >\n            <Navbar\n                isWildfire={isWildfire}\n                selectIsWildfire={selectIsWildfire}\n                selectIsStorm={selectIsStorm}\n            />\n\n            {!loading ? (\n                <>\n                    <LeafletMap eventData={eventData} /> <EventsBar />\n                </>\n            ) : (\n                <Loader />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}