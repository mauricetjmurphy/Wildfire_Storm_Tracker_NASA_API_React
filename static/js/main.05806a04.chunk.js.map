{"version":3,"sources":["components/Marker.js","components/StormMarker.js","components/StormPathMarker.js","components/Map.js","components/spinner.gif","components/Loader.js","components/Navbar.js","components/EventInfo.js","components/EventsBar.js","App.js","index.js"],"names":["Marker","lat","lng","onClick","className","icon","locationIcon","StormMarker","Map","isWildfire","eventData","setEventInfo","currentPosition","defaultProps","center","zoom","stormMarkers","map","ev","i","categories","id","console","log","geometries","length","el","StormPathMarker","title","coordinates","fireMarkers","bootstrapURLKeys","key","process","MAPS_API_KEY","defaultCenter","defaultZoom","styles","width","height","display","justifyContent","alignItems","Loader","style","src","spinner","alt","nav","maxWidth","padding","buttonContainer","Navbar","selectIsWildfire","selectIsStorm","href","EventInfo","eventInfo","EventsBar","App","useState","setEventData","loading","setLoading","setCurrentPosition","setIsWildfire","navigator","geolocation","getCurrentPosition","pos","crd","coords","latitude","longitude","err","warn","code","message","enableHighAccuracy","timeout","maximumAge","useEffect","a","fetch","res","json","events","fetchEvents","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05806a04.chunk.js","sourcesContent":["import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\n\nconst Marker = ({ lat, lng, onClick }) => {\n    return (\n        <div className=\"location-marker\" onClick={onClick}>\n            <Icon icon={locationIcon} className=\"location-icon\"></Icon>\n        </div>\n    );\n};\n\nexport default Marker;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\n\nconst StormMarker = ({ lat, lng, onClick }) => {\n    return (\n        <div className=\"storm-marker\" onClick={onClick}>\n            <Icon icon=\"carbon:tropical-storm-tracks\" />\n        </div>\n    );\n};\n\nexport default StormMarker;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\n\nconst StormMarker = ({ lat, lng, onClick }) => {\n    return (\n        <div className=\"storm-marker\" onClick={onClick}>\n            <Icon icon=\"gis:point\" />\n        </div>\n    );\n};\n\nexport default StormMarker;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport StormMarker from \"./StormMarker\";\nimport StormPathMarker from \"./StormPathMarker\";\n\nimport \"../styles/styles.css\";\n\nexport default function Map({\n    isWildfire,\n    eventData,\n    setEventInfo,\n    currentPosition,\n}) {\n    const defaultProps = {\n        center: {\n            lat: 10.99835602,\n            lng: 77.01502627,\n        },\n        zoom: 6,\n    };\n\n    const stormMarkers = eventData.map((ev, i) => {\n        if (ev.categories[0].id === 10) {\n            console.log(ev.geometries.length - 1);\n            return ev.geometries.map((el, i) => {\n                if (i < ev.geometries.length - 1) {\n                    return (\n                        <StormPathMarker\n                            onClick={() =>\n                                setEventInfo({ id: ev.id, title: ev.title })\n                            }\n                            lat={ev.geometries[i].coordinates[1]}\n                            lng={ev.geometries[i].coordinates[0]}\n                        />\n                    );\n                }\n\n                if (i == ev.geometries.length - 1) {\n                    return (\n                        <StormMarker\n                            onClick={() =>\n                                setEventInfo({ id: ev.id, title: ev.title })\n                            }\n                            lat={ev.geometries[i].coordinates[1]}\n                            lng={ev.geometries[i].coordinates[0]}\n                        />\n                    );\n                }\n            });\n        } else {\n            return null;\n        }\n    });\n\n    const fireMarkers = eventData.map((ev, i) => {\n        if (ev.categories[0].id === 8) {\n            return (\n                <Marker\n                    onClick={() => setEventInfo({ id: ev.id, title: ev.title })}\n                    lat={ev.geometries[0].coordinates[1]}\n                    lng={ev.geometries[0].coordinates[0]}\n                />\n            );\n        }\n        return null;\n    });\n\n    if (isWildfire) {\n        return (\n            <div className=\"map\">\n                <GoogleMapReact\n                    bootstrapURLKeys={{\n                        key: process.env.MAPS_API_KEY,\n                    }}\n                    defaultCenter={\n                        currentPosition\n                            ? currentPosition.center\n                            : defaultProps.center\n                    }\n                    defaultZoom={defaultProps.zoom}\n                >\n                    {fireMarkers}\n                </GoogleMapReact>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"map\">\n                <GoogleMapReact\n                    bootstrapURLKeys={{\n                        key: process.env.MAPS_API_KEY,\n                    }}\n                    defaultCenter={\n                        currentPosition\n                            ? currentPosition.center\n                            : defaultProps.center\n                    }\n                    defaultZoom={defaultProps.zoom}\n                >\n                    {stormMarkers}\n                </GoogleMapReact>\n            </div>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/spinner.e1e435ec.gif\";","import React from \"react\";\nimport spinner from \"./spinner.gif\";\n\nconst styles = {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n};\n\nconst Loader = () => {\n    return (\n        <div style={styles}>\n            <img src={spinner} alt=\"Loading\" />\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\n\nimport \"../styles/styles.css\";\n\nconst nav = {\n    maxWidth: \"100%\",\n    height: \"80px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0 50px\",\n};\n\nconst buttonContainer = {\n    display: \"flex\",\n};\n\nconst Navbar = ({ isWildfire, selectIsWildfire, selectIsStorm }) => {\n    return (\n        <nav style={nav}>\n            <div>\n                <a href=\"/\">Events</a>\n            </div>\n            <div style={buttonContainer}>\n                <div>\n                    <button\n                        onClick={selectIsWildfire}\n                        className={isWildfire ? \"btn wildfire\" : \"btn\"}\n                    >\n                        Wildfires\n                    </button>\n                </div>\n                <div>\n                    <button\n                        onClick={selectIsStorm}\n                        className={!isWildfire ? \"btn storm\" : \"btn\"}\n                    >\n                        Storms\n                    </button>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"../styles/styles.css\";\n\nconst EventInfo = ({ eventInfo }) => {\n    if (eventInfo) {\n        return (\n            <div>\n                <h1>Event Information</h1>\n                <ul>\n                    <li>Id: {eventInfo.id}</li>\n                    <li>Title: {eventInfo.title}</li>\n                </ul>\n            </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default EventInfo;\n","import React from \"react\";\nimport EventInfo from \"./EventInfo\";\n\nimport \"../styles/styles.css\";\n\nconst EventsBar = ({ eventInfo }) => {\n    return (\n        <div className=\"events-bar\">\n            {eventInfo && <EventInfo eventInfo={eventInfo} />}\n        </div>\n    );\n};\n\nexport default EventsBar;\n","import { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Loader from \"./components/Loader\";\nimport Navbar from \"./components/Navbar\";\nimport EventsBar from \"./components/EventsBar\";\n\nimport \"./styles/App.css\";\nimport \"./styles/styles.css\";\n\nfunction App() {\n    const [eventData, setEventData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [eventInfo, setEventInfo] = useState(null);\n    const [currentPosition, setCurrentPosition] = useState({});\n    const [isWildfire, setIsWildfire] = useState(true);\n\n    var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    };\n\n    function success(pos) {\n        var crd = pos.coords;\n\n        setCurrentPosition({\n            center: {\n                lat: crd.latitude,\n                lng: crd.longitude,\n            },\n        });\n    }\n\n    function error(err) {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    navigator.geolocation.getCurrentPosition(success, error, options);\n\n    useEffect(() => {\n        const fetchEvents = async () => {\n            setLoading(true);\n            const res = await fetch(\n                \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n            );\n            const { events } = await res.json();\n\n            setEventData(events);\n            setLoading(false);\n        };\n\n        fetchEvents();\n    }, []);\n\n    function selectIsWildfire() {\n        setIsWildfire(true);\n    }\n\n    function selectIsStorm() {\n        setIsWildfire(false);\n    }\n\n    return (\n        <div\n            style={loading ? { background: \"#fff\" } : { background: \"#f3f2ef\" }}\n            className=\"App\"\n        >\n            <Navbar\n                isWildfire={isWildfire}\n                selectIsWildfire={selectIsWildfire}\n                selectIsStorm={selectIsStorm}\n            />\n\n            {!loading ? (\n                <div className=\"main-container\">\n                    <Map\n                        isWildfire={isWildfire}\n                        eventData={eventData}\n                        setEventInfo={setEventInfo}\n                        currentPosition={currentPosition}\n                    />\n                    <EventsBar eventInfo={eventInfo} />\n                </div>\n            ) : (\n                <Loader />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}